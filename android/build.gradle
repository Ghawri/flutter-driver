buildscript {
    ext.kotlin_version = '2.2.0'
    repositories {
        google()
        mavenCentral()
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    afterEvaluate { project ->
        if (project.plugins.hasPlugin("com.android.application") ||
                project.plugins.hasPlugin("com.android.library")) {
            project.android {
                compileSdkVersion 35
            }
        }
    }
}

// Ensure 3rd-party Android library modules define a namespace for AGP 8+
subprojects { project ->
    project.plugins.withId('com.android.library') {
        def androidExt = project.extensions.findByName('android')
        if (androidExt != null && (!androidExt.hasProperty('namespace') || androidExt.namespace == null || androidExt.namespace.toString().trim().isEmpty())) {
            def manifestFile = new File(project.projectDir, 'src/main/AndroidManifest.xml')
            if (manifestFile.exists()) {
                try {
                    def manifest = new XmlSlurper(false, false).parse(manifestFile)
                    def manifestPackage = manifest.@package?.text()
                    if (manifestPackage) {
                        androidExt.namespace = manifestPackage
                    }
                } catch (Throwable ignored) {
                    // If parsing fails, leave as-is
                }
            }
        }
    }
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
